#!/usr/bin/env node

/*jslint nomen:false */
/*global require, __dirname */
var express = require('express'),
    util = require('util'),
    path = require('path'),
    mappings = {},
    optimist = require('optimist'),
    commandLineOptions = optimist
        .usage('Usage: $0 [--proxy <remotehost> [-m <directoryMapping>]] [-d] [-h <hostname>] [-p <port>] [-r documentRoot]')
        .boolean('d')
        .options('root', {
            alias: 'r',
            describe: 'The directory to serve static files from. Defaults to the current working directory unless --proxy is specified.'
        })
        .options('debug', {
            alias: 'd',
            describe: 'Turn on debug mode (server logs events to stderr, client logs to console).'
        })
        .options('proxy', {
            describe: 'The remote host:port to serve non-CSS files from'
        })
        .options('map', {
            alias: 'm',
            describe: 'Directory mappings of the form: remoteDir=localDir where localDir is relative to documentRoot unless prefixed with /'
        })
        .options('host', {
            alias: 'h',
            default: '0.0.0.0',
            describe: 'The local hostname or IP-address to listen on'
        })
        .options('port', {
            alias: 'p',
            default: 3000,
            describe: 'The local post number to listen on'
        })
        .options('watchfile', {
            describe: 'force using watchFile'
        })
        .check(function (argv) {
            if (argv.map) {
                (typeof argv.map === 'string' ? [argv.map] : argv.map).forEach(function (urlEqualsDir) {
                    var matchUrlEqualsDir = urlEqualsDir.match(/^([^=]+)=([^=]+)$/);
                    if (matchUrlEqualsDir) {
                        mappings[matchUrlEqualsDir[1]] = matchUrlEqualsDir[2];
                    } else {
                        throw 'Invalid --map syntax: ' + urlEqualsDir;
                    }
                });
            }
        })
        .argv,
        documentRoot;

if (commandLineOptions.root) {
    documentRoot = path.resolve(process.cwd(), commandLineOptions.root);
} else if (!commandLineOptions.proxy) {
    documentRoot = process.cwd();
}

if (commandLineOptions.help) {
    optimist.showHelp();
    process.exit();
}

if (commandLineOptions.proxy) {
    console.log('Proxying to ' + commandLineOptions.proxy);
    if (documentRoot) {
        console.log('Serving static CSS files from ' + documentRoot);
    }
} else if (documentRoot) {
    console.log('Serving static files from ' + documentRoot);
}

console.log('Listening to http://' + commandLineOptions.host + ':' + commandLineOptions.port + '/');

require('../lib/createLiveStyleApp')({
    debug: commandLineOptions.debug,
    watchfile: commandLineOptions.watchfile,
    documentRoot: documentRoot,
    mappings: mappings,
    proxy: commandLineOptions.proxy || null
}).listen(commandLineOptions.port, commandLineOptions.host);
